name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches: [ production ]

env:
  SSH_KEY: ${{ secrets.ci_deploy_key }}
  SSH_USER: ${{ secrets.ci_production_username }}
  SSH_HOST: ${{ secrets.ci_production_host }}
  # The root of an App. This where git root is.
  APP_ROOT: ${{ secrets.ci_app_root }}
  # The App located inside project root. Mainly the product root is the folder
  # with docker-compose.yml.
  PROJECT_ROOT: ${{ secrets.ci_project_root }}
  COMPOSER_BIN: 'docker compose exec -T php composer'
  DRUSH_BIN: 'docker compose exec -T php drush'
  DRUSH_URI: 'https://druki.ru'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Create SSH key'
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END

      - name: 'Pull changes'
        shell: bash
        run: |
          ssh production "cd $APP_ROOT && git fetch && git checkout"
          ssh production "cd $APP_ROOT && git pull origin production"

      - name: 'Install Composer dependencies'
        run: ssh production "cd $PROJECT_ROOT && $COMPOSER_BIN install --no-dev -o -n"

      - name: 'Apply database updates'
        run: ssh production "cd $PROJECT_ROOT && $DRUSH_BIN updatedb -y --no-cache-clear"

      - name: 'Rebuild cache'
        run: ssh production "cd $PROJECT_ROOT && $DRUSH_BIN cache:rebuild -y"

      - name: 'Synchronize configurations'
        run: ssh production "cd $PROJECT_ROOT && $DRUSH_BIN config:import --diff -y"

      - name: 'Build CSS and JavaScript'
        run: ssh production "cd $PROJECT_ROOT && docker compose up node"

      - name: 'Rebuild cache'
        run: ssh production "cd $PROJECT_ROOT && $DRUSH_BIN cache:rebuild -y"

      - name: 'Clear PHP cache'
        run: ssh production "cd $PROJECT_ROOT && docker compose restart php"

      - name: 'Import custom translations'
        run: ssh production "cd $PROJECT_ROOT && $DRUSH_BIN locale:import --type=customized --override=all ru ../translations/ru.po"

      - name: 'Enqueue cache warming'
        run: |
          ssh production "cd $PROJECT_ROOT && $DRUSH_BIN queue:delete warmer --uri=$DRUSH_URI"
          ssh production "cd $PROJECT_ROOT && $DRUSH_BIN warmer:enqueue sitemap --uri=$DRUSH_URI"
