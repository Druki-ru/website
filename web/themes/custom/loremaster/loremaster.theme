<?php

/**
 * @file
 * Custom hooks and functions special for theme.
 */

/**
 * Implements hook_preprocess().
 */
function loremaster_preprocess(array &$variables, string $hook): void {
  // An array with libraries that must be attached on demand. This is done here
  // to simplify things for loremaster theme. You can attach them whatever you
  // want.
  // An array contains:
  // - theme_hook_original: The theme hook to attach to.
  //   - libraries: An array with libraries to attach to that theme hook.
  $dynamic_libraries = [
    // Drupal core specific.
    'breadcrumb' => ['loremaster/component.ui.breadcrumb'],
    'links' => ['loremaster/component.ui.links'],
    'menu_local_tasks' => ['loremaster/component.ui.local-tasks'],
    'menu_local_action' => ['loremaster/component.ui.local-actions'],
    'vertical_tabs' => ['loremaster/component.ui.vertical-tabs'],
    'menu' => ['loremaster/component.ui.menu'],
    'page_title' => ['loremaster/component.ui.page-title'],
    'pager' => ['loremaster/component.ui.pager'],
    'status_messages' => ['loremaster/component.ui.status-messages'],
    // Custom theme hooks.
    'photoswipe_image_formatter' => ['loremaster/component.javascript.photoswipe'],
    'druki_wiki' => ['loremaster/component.theme.druki-wiki'],
    'druki_download' => ['loremaster/component.theme.druki-download'],
    'druki_official_user_guide' => ['loremaster/component.theme.official-user-guide'],
  ];

  $theme_hook_original = $variables['theme_hook_original'];
  if (array_key_exists($theme_hook_original, $dynamic_libraries)) {
    foreach ($dynamic_libraries[$theme_hook_original] as $library) {
      $variables['#attached']['library'][] = $library;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'page.html.twig'.
 */
function loremaster_preprocess_page(array &$variables): void {
  $variables['is_page_content_fullwidth'] = FALSE;
  $routes_with_fullwidth = [
    'druki.frontpage',
    'druki.download',
    'druki.wiki',
  ];
  $route_match = \Drupal::routeMatch();
  if (\in_array($route_match->getRouteName(), $routes_with_fullwidth)) {
    $variables['is_page_content_fullwidth'] = TRUE;
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'block--system-menu-block.html.twig'.
 */
function loremaster_preprocess_block__system_menu_block(array &$variables): void {
  $variables['content']['#attributes']['data-block-id'] = $variables['block_id'];
}

/**
 * Implements hook_preprocess_HOOK() for 'menu--main.html.twig'.
 */
function loremaster_preprocess_menu__main(array &$variables): void {
  if (isset($variables['attributes']['data-block-id'])) {
    $variables['system_menu_block_id'] = $variables['attributes']['data-block-id'];
    unset($variables['attributes']['data-block-id']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for block--druki-content-toc-mobile.html.twig.
 */
function loremaster_preprocess_block__druki_content_toc_mobile(array &$variables): void {
  $variables['#attached']['library'][] = 'loremaster/component.block.druki-content-toc-mobile';
}

/**
 * Implements hook_preprocess_HOOK() for 'druki-author.html.twig'.
 */
function loremaster_preprocess_druki_author(array &$variables): void {
  /** @var \Drupal\druki_author\Entity\Author $author */
  $author = $variables['druki_author'];
  $variables['avatar_image_id'] = NULL;
  if ($author->hasImage()) {
    $avatar_media = $author->getImageMedia();
    $source_field = $avatar_media->getSource()->getConfiguration()['source_field'];
    $variables['avatar_image_id'] = $avatar_media->get($source_field)
      ->first()
      ->get('target_id')
      ->getValue();
  }

  $current_language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['description'] = NULL;
  if ($author->hasDescription()) {
    $descriptions = $author->getDescription();
    if (isset($descriptions[$current_language])) {
      $variables['description'] = $descriptions[$current_language];
    }
  }
}
